apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: morgan-elk
  name: elasticsearch-ingest
  labels:
    app: elasticsearch
    role: ingest
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 30 
  selector:
    matchLabels:
     app: elasticsearch
     role: ingest
  template:
    metadata:
      labels:
        app: elasticsearch
        role: ingest
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role				
                  operator: In
                  values:		
                  - ingest
              topologyKey: kubernetes.io/hostname	  
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch-ingest
        securityContext:
          privileged: false
        image: docker.elastic.co/elasticsearch/elasticsearch-platinum:6.2.4
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "cluster.name"
          value: "morgan-elk"
        - name: node.master
          value: "false"
        - name: node.ingest
          value: "true"
        - name: node.data
          value: "false"  
        - name: search.remote.connect
          value: "false"		  
        - name: discovery.zen.ping.unicast.hosts
          value: "es-master-transport.morgan-elk.svc.cluster.local"	  
        - name: "ES_JAVA_OPTS"
          value: "-Xms3G -Xmx3G"
        ports:
        - containerPort: 9300
          name: transport
        - containerPort: 9200
          name: http		  
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
          - emptyDir:
              medium: ""
            name: "storage"
      terminationGracePeriodSeconds: 120			

